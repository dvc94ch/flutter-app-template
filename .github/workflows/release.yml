on:
  push:
    branches:
    - master

name: Flutter App Template Release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      uses: actions/create-release@v1
      id: create-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v_${{ github.sha }}
        release_name: Release v_${{ github.sha }}
        body: Flutter App Template
    - name: Output release URL
      run: echo "${{ steps.create-release.outputs.upload_url }}" > release_url.txt
    - name: Save release URL file
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  publish:
    strategy:
      fail-fast: false
      matrix:
        rust:
        - version: stable
        flutter:
        - version: dev
        platform:
        - target: x86_64-unknown-linux-gnu
          host: ubuntu-latest
          format: appimage
          artifact: flutter-app-template-x86_64.AppImage

        - target: x86_64-apple-darwin
          host: macos-latest
          format: dmg

        - target: aarch64-linux-android
          host: ubuntu-latest
          format: apk
          artifact: apk/flutter-app-template.apk

        - target: aarch64-apple-ios
          host: macos-latest
          format: lipo
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
      FLUTTER_ENGINE_VERSION: a50f1ef56a05999bfa97a777cca14fd7a00e8454
      LLVM_CONFIG_PATH: /usr/local/opt/llvm/bin/llvm-config
      NDK_HOME: /usr/local/lib/android/sdk/ndk-bundle

    runs-on: ${{ matrix.platform.host }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Cache cargo folder
      uses: actions/cache@v1
      with:
        path: ~/.cargo
        key: ${{ matrix.platform.target }}-cargo-${{ matrix.rust.version }}

    - name: Install dependencies ubuntu
      if: matrix.platform.host == 'ubuntu-latest'
      run: sudo apt-get install llvm-dev libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Install dependencies macos
      if: matrix.platform.host == 'macos-latest'
      run: brew install llvm

    - name: Install appimagetool
      if: matrix.platform.format == 'appimage'
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        sudo mv appimagetool-x86_64.AppImage /usr/bin/appimagetool

    - name: Install rust toolchain
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust.version }}
        targets: ${{ matrix.platform.target }}

    - name: Install flutter
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ matrix.flutter.version }}

    - name: Install cargo-flutter
      run: cargo install cargo-flutter --force

    - name: Build
      run: cargo flutter --quiet --no-sign --format ${{ matrix.platform.format }}
        build --target ${{ matrix.platform.target }} --release

    - name: Download release url
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get release url
      id: get-release-info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get-release-info.outputs.upload_url }}
        asset_path: ./target/flutter/${{ matrix.platform.target }}/release/${{ matrix.platform.artifact
          }}
        asset_name: flutter-app-template-${{ matrix.platform.target }}.${{ matrix.platform.format
          }}
        asset_content_type: application/octet-stream
